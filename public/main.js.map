{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/todo.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"header\\\" style=\\\"text-align:center\\\">\\n    <!-- <img src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/t-1/apr15-sphere.jpg\\\" alt=\\\"\\\"> -->\\n    <h1>\\n    Your TODO list!\\n  </h1>\\n\\n</div>\\n\\n<div class=\\\"todoContainer container text-center\\\">\\n  <div class=\\\"row todo-host\\\">\\n\\n    <div id=\\\"todo-table\\\" class=\\\"todoform\\\">\\n      <input [ngClass]=\\\"{'error': !validTodo}\\\" type=\\\"text\\\" #inputToDo name=\\\"item\\\" (keydown)=\\\"newToDoChange($event)\\\" value=\\\"{{newToDo}}\\\" placeholder=\\\"Add new item...\\\" required />\\n      <button class=\\\"btn addbtn\\\" (click)=\\\"addToDo(inputToDo.value)\\\" type=\\\"submit\\\">ADD TASK</button>\\n    </div>\\n\\n    <div class=\\\"todo text-center\\\" *ngFor=\\\"let todo of todoList; index as todoIndex;\\\">\\n      <app-todo [toDo]=\\\"todo\\\"  index=\\\"{{todoIndex}}\\\" (removeToDo)=\\\"removeToDo({todo:todo,todoIndex:todoIndex})\\\">\\n      </app-todo>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Todo } from './todo';\nimport { HttpService } from './http.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'ToDo List';\n\n  todoList: Todo[] = [];\n  newToDo: Todo;\n  validTodo: boolean = true;\n\n  constructor(public httpService: HttpService) { }\n\n  ngOnInit () {\n   this.getAllTodos();\n  }\n\n  getAllTodos = () => {\n    this.httpService.getAllTodos().subscribe((results: Todo[]) => {\n      this.todoList = results.reverse();\n    });\n  }\n\n  newToDoChange = (event) => {\n    this.validTodo = true;\n    this.newToDo = event.target.value;\n  }\n\n  addToDo = (todo) => {\n    const newToDo = new Todo(todo, false, new Date());\n    this.validTodo = this.isValidToDo(newToDo);\n    if (this.validTodo) {\n      this.newToDo = null;\n      this.insertProduct(newToDo);\n    }\n  }\n\n  insertProduct = (newToDo) => {\n    // .subscribe((results: Todo) => results);\n    this.httpService.insertProduct(newToDo).subscribe((results: Todo) => {\n      // results\n      this.getAllTodos();\n    });\n  }\n\n  isValidToDo = (todo:Todo) => {\n  return todo.title.trim() ? true : false;\n  }\n\n  removeToDo = (event) => {\n    this.httpService.deleteTodo(event.todo).subscribe(results => this.getAllTodos() );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { HttpService } from './http.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule\n  ],\n  providers: [ HttpService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Todo } from './todo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  private headers = new HttpHeaders({'Content-Type': 'application/json'});\n\n  constructor(private http: HttpClient) { }\n\n  insertProduct = (newToDo: Todo) => {\n    return this.http.post('/todo', newToDo)\n  }\n\n  deleteTodo = (todo) => {\n    const header = this.headers;\n    const options = { headers: this.headers , body : todo };\n    const url = '/todo';\n    return this.http.delete(url, options);\n  }\n\n  getAllTodos = () => {\n    return this.http.get('/todo');\n  }\n\n}\n","export class Todo {\n  title: string;\n  status: boolean;\n  time: string;\n  _id?: string;\n\n  constructor(title, status = false, time) {\n    this.title = title;\n    this.status = status;\n    this.time = time;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"todobody text-center\\\">\\n  <p>{{ toDo.title }}</p>\\n</div>\\n  <span class=\\\"float-right actionbar\\\" (click)=\\\"remove()\\\">\\n    <i class=\\\"fa fa-trash\\\"></i>\\n  </span>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Todo } from '../todo';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n  @Input() toDo: Todo;\n  @Input() index: number;\n  @Output() removeToDo: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  remove = () => {\n    this.removeToDo.emit();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}